import osimport pygribdef search(dirname):    #try:        filenames = os.listdir(dirname)        for filename in filenames:            full_filename = os.path.join(dirname, filename)            if os.path.isdir(full_filename):                search(full_filename)            else:                ext = os.path.splitext(full_filename)[-1]                if ext == '.grib2':                                                             grbs = pygrib.open(full_filename)                                          grbs.seek(0)                                        for grb in grbs:                        print(grb)                                            grb = grbs.select(name = 'Temperature')[0]                                        ###val확인                    val = grb.data()[0]                    lat = grb.data()[1]                    lon = grb.data()[2]                                        data, lats, lons = grb.data(lat1=38,lat2=25,lon1=140,lon2=150)                    val = grb.values                    #val.shape                    #val = np.transpose(val)                    #val = np.rot90(val)                                        grbs.close()                                        print(full_filename)   # except PermissionError:    #    passsearch("/Volumes/Samsung_T5/ldaps")#%%import osimport pygribimport pandas as pdimport numpy as npimport matplotlib.pyplot as pltdirname = "/Volumes/Samsung_T5/ldaps/201907"def image_save(grbs,filename):    image_dir = os.path.join("/Users/ebrain/Desktop/grib_api-1.28.0-Source/image", filename )    if not os.path.isdir(image_dir):                os.makedirs(image_dir)        cnt = 1    for grb in grbs:        val = grb.data()[0]        lat = grb.data()[1]        lon = grb.data()[2]        val = np.transpose(val)        val = np.rot90(val)        m = val.min()        x = val.max()        val = (val-m)/(x-m)        image_path = os.path.join(image_dir, str(cnt)+'_'+grb.name + '.png')        plt.imshow(val)        plt.savefig(image_path,dpi=50 )        plt.close()        print(grb)        cnt = cnt+1                def hist_save(grbs,filename):            hist_dir = os.path.join("/Users/ebrain/Desktop/grib_api-1.28.0-Source/hist", filename )    if not os.path.isdir(hist_dir):        os.makedirs(hist_dir)    list_hist = []    for i in range(0,60):        list_hist.append(1/59*i)    cnt = 1    for grb in grbs:        val = grb.data()[0]        m = val.min()        x = val.max()        val = (val-m)/(x-m)        hist_path = os.path.join(hist_dir, str(cnt)+'_'+grb.name + '.png')        for_hist = np.ravel(val)        plt.hist(for_hist, list_hist)        plt.savefig(hist_path,dpi=50 )        plt.close()        print(grb)        cnt = cnt+1filenames = os.listdir(dirname)for filename in filenames:    full_filename = os.path.join(dirname, filename)    if os.path.isdir(full_filename):        continue    else:        ext = os.path.splitext(full_filename)[-1]        if ext == '.gb2':                                     grbs = pygrib.open(full_filename)              grbs.seek(0)            #image_save(grbs,filename)            #hist_save(grbs, filename)            cor_dir = "/Users/ebrain/Desktop/grib_api-1.28.0-Source/cor"             if not os.path.isdir(cor_dir):                        os.makedirs(cor_dir)            cnt = 1            for_cor =[]            for grb in grbs:                val = grb.data()[0]                #m = val.min()                #x = val.max()                #val = (val-m)/(x-m)                                val = val[grbs[13].data()[0].mask == False]                for_cor.append(np.ravel(val))                print(grb)                cnt = cnt+1            cor = np.ma.corrcoef(for_cor)            ###val확인            val = grb.data()[0]            lat = grb.data()[1]            lon = grb.data()[2]                        data, lats, lons = grb.data(lat1=38,lat2=25,lon1=140,lon2=150)            val = grb.values            val.shape                        grbs.close()                                 print(full_filename)  